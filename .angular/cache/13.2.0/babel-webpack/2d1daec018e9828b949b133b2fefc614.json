{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CharacterService = /*#__PURE__*/(() => {\n  class CharacterService {\n    constructor(http) {\n      this.http = http;\n      this.headers = new HttpHeaders().set('Content-Type', 'application/json');\n    } // Create\n\n\n    createCharacter(data) {\n      let url = `${this.baseUri}/create`;\n      return this.http.post(url, data).pipe(catchError(this.errorMgmt));\n    }\n\n    getCharacters() {\n      return this.http.get(`${this.baseUri}`);\n    } // Error handling\n    // tslint:disable-next-line:typedef\n\n\n    errorMgmt(error) {\n      let errorMessage = '';\n\n      if (error.error instanceof ErrorEvent) {\n        // Get client-side error\n        errorMessage = error.error.message;\n      } else {\n        // Get server-side error\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n      }\n\n      console.log(errorMessage);\n      return throwError(() => {\n        return errorMessage;\n      });\n    }\n\n  }\n\n  CharacterService.ɵfac = function CharacterService_Factory(t) {\n    return new (t || CharacterService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CharacterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CharacterService,\n    factory: CharacterService.ɵfac,\n    providedIn: 'root'\n  });\n  return CharacterService;\n})();","map":null,"metadata":{},"sourceType":"module"}